[{"title":"SD-如何训练正负滑块差异丹","url":"/2024/12/13/如何训练差异丹/","content":"# 成品模型效果展示\n\n- **什么时候需要这类模型？**\n\n```\n希望对出图内容的某一内容进行修改而不过多的改变其他内容时，推荐使用该类模型。\n```\n\n{% externalLinkCard \"pony contrast adjuster\" \"https://civitai.com/models/536749/pony-contrast-adjuster\" \"/images/SD-如何训练正负差异丹/logo.webp\" %}\n\n{% externalLinkCard \"Illustrious lineart adjuster\" \"https://civitai.com/models/1009332/illustrious-lineart-adjuster\" \"/images/SD-如何训练正负差异丹/logo.webp\" %}\n\n{% externalLinkCard \"Illustrious Auto Nude\" \"https://civitai.com/models/1043351/illustrious-auto-nude\" \"/images/SD-如何训练正负差异丹/logo.webp\" %}\n\n<div style=\"display: flex;\">\n    <img src=\"/images/SD-如何训练正负差异丹/1.webp\">\n    <img src=\"/images/SD-如何训练正负差异丹/2.webp\">\n    <img src=\"/images/SD-如何训练正负差异丹/3.webp\">\n    <img src=\"/images/SD-如何训练正负差异丹/4.webp\">\n    <img src=\"/images/SD-如何训练正负差异丹/5.webp\">\n</div>\n\n# 训练方法\n\n## 数据集\n\n准备**合适**数量、样式分布**较广且平均**（单一类型的反面）的图片，需要打标。数量根据自己的算力和修改图片的耗费决定，条件允许的情况下**越多越准确**。我这里以通过[HakuBooru](https://github.com/KohakuBlueleaf/HakuBooru)收集到的各种评级的图片为例，每种评级16张，共64张图片：\n\n<div style=\"display: flex;\">\n    <img src=\"/images/SD-如何训练正负差异丹/image1.webp\">\n    <img src=\"/images/SD-如何训练正负差异丹/image2.webp\">\n</div>\n\n## 训练原始底模\n\n以这些图片作为原始图片，正常训练出一个模型作为一个原始底模，以下是在[lora-scripts](https://github.com/Akegarasu/lora-scripts)中的训练参数参考，将模型训练至**拟合**即可：\n\n```toml\nmodel_train_type = \"sdxl-lora\"\npretrained_model_name_or_path = \"D:/hmkai/ComfyUI/models/checkpoints/llustrious-XL-v0.1.safetensors\"\ntrain_data_dir = \"D:/data/差异/原始图片64\"\nprior_loss_weight = 1\nresolution = \"1024,1024\"\nenable_bucket = true\nmin_bucket_reso = 256\nmax_bucket_reso = 2048\nbucket_reso_steps = 32\nbucket_no_upscale = true\noutput_name = \"IL-64-MKI\"\noutput_dir = \"./output\"\nsave_model_as = \"safetensors\"\nsave_precision = \"fp16\"\nsave_every_n_epochs = 5\nmax_train_epochs = 50\ntrain_batch_size = 4\ngradient_checkpointing = true\ngradient_accumulation_steps = 16\nnetwork_train_unet_only = true\nnetwork_train_text_encoder_only = false\nlearning_rate = 0.0001\nunet_lr = 0.0001\ntext_encoder_lr = 0.00001\nlr_scheduler = \"cosine_with_restarts\"\nlr_warmup_steps = 0\nlr_scheduler_num_cycles = 1\noptimizer_type = \"Lion8bit\"\nnetwork_module = \"networks.lora\"\nnetwork_dim = 1 # 通常dim越大对画面修改越大\nnetwork_alpha = 1\nlog_with = \"tensorboard\"\nlogging_dir = \"./logs\"\ncaption_extension = \".txt\"\nshuffle_caption = false\nkeep_tokens = 0\nmax_token_length = 255\nseed = 2104\nmixed_precision = \"bf16\"\nfp8_base = false\nsdpa = true\nlowram = false\ncache_latents = true\ncache_latents_to_disk = false\ncache_text_encoder_outputs = false\ncache_text_encoder_outputs_to_disk = false\npersistent_data_loader_workers = true\n```\n\n## 制作差异图片\n\n接着我们要做**差异**，也就是对这些图片进行一些修改\n\n常见的修改比如一些 `线稿加深，对比度加强，面部美颜，胸部大小，星星眼`等等...总之如果你想改变**单一内容**而且尽量保证**其他内容不变**时，推荐采用差异炼丹\n\n根据你希望的“差异”，为每一张图片都制作一份差异后的图片，图片的标签不变\n\n我这里以对比度为例~~（其实我很想做胸部调节和星星眼之类的局部差异丹，但是我的PS水平并不好）~~，修改后的数据集：\n\n![image](images/SD-如何训练正负差异丹/image.webp)\n\n## 训练差异模型\n\n以修改后的图片作为训练集，在[lora-scripts](https://github.com/Akegarasu/lora-scripts)中，对于上方原始的训练参数，你只需要且最好仅改变以下内容：\n\n```toml\ntrain_data_dir = \"D:/data/差异/原始图片64\" # 填写你修改后的训练集\noutput_name = \"IL-lineart-MKI\" # 改一下输出模型的名称\nbase_weights = [ \"D:\\\\hmkai\\\\lora-scripts\\\\output\\\\IL-64-MKI.safetensors\" ] # 填写你上面炼制的LoRA模型路径\nbase_weights_multiplier = [ 1 ]\n```\n\n其中`base_weights`的作用是将原先炼制的LoRA融合到底模，假如你的脚本中没有这一项，请使用一些方法先融合LoRA模型至底模中，炼制差异模型时将原先的底模替换为融合后的模型\n\n等待训练完成后即可获得一个只改变某单一内容的LoRA啦☆（<ゝω・）~Kira☆～\n","tags":["Stable Diffusion","训练"],"categories":["Stable Diffusion"]},{"title":"hexo-theme-reimu效果展示(fork)","url":"/2024/11/29/hexo-theme-reimu效果展示/","content":"# 以下内容来自reimu主题作者D-Sketon\n<!-- 文章链接：[https://d-sketon.github.io/20240114/hexo-theme-reimu-content/](https://d-sketon.github.io/20240114/hexo-theme-reimu-content/) -->\n{% externalLinkCard \"文章链接：hexo-theme-reimu效果展示\" \"https://d-sketon.github.io/20240114/hexo-theme-reimu-content/\" \"https://github.githubassets.com/assets/apple-touch-icon-144x144-b882e354c005.png\" %}\n\n<!-- 原始代码实现：[https://github.com/D-Sketon/reimu-playground/blob/main/source/_posts/hexo-theme-reimu%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.md](https://github.com/D-Sketon/reimu-playground/blob/main/source/_posts/hexo-theme-reimu%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.md) -->\n{% externalLinkCard \"原始代码实现：hexo-theme-reimu效果展示\" \"https://github.com/D-Sketon/reimu-playground/blob/main/source/_posts/hexo-theme-reimu%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.md\" \"https://github.githubassets.com/assets/apple-touch-icon-144x144-b882e354c005.png\" %}\n\n你可以在以上内容找到本文原始来源及原始代码，本文置于本博客仅为提供作者编写时样式参考\n## Markdown 基本元素\n\n### 标题\n\n# H1\n\n## H2\n\n### H3\n\n#### H4\n\n##### H5\n\n###### H6\n\n### 强调\n\nEmphasis, aka italics, with _asterisks_ or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or **underscores**.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n\n### 列表\n\n#### Definition List (dl)\n\n<dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n#### Ordered List (ol)\n\n1. List Item 1\n2. List Item 2\n3. List Item 3\n\n#### Unordered List (ul)\n\n- List Item 1\n- List Item 2\n- List Item 3\n\n### 段落\n\nLorem ipsum dolor sit amet, [test link]() consectetur adipiscing elit. **Strong text** pellentesque ligula commodo viverra vehicula. _Italic text_ at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. ~~Deleted text~~ tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.\n\nInterdum et malesuada fames ac ante ipsum primis in faucibus. `Sed erat diam`, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can _put_ **Markdown** into a blockquote.\n\nMaecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.\n\n### 表格\n\n| Table Header 1 | Table Header 2 | Table Header 3 |\n| -------------- | -------------- | -------------- |\n| Division 1     | Division 2     | Division 3     |\n| Division 1     | Division 2     | Division 3     |\n| Division 1     | Division 2     | Division 3     |\n\n| Markdown | Less      | Pretty     |\n| -------- | --------- | ---------- |\n| _Still_  | `renders` | **nicely** |\n| 1        | 2         | 3          |\n\n### 其他元素 - abbr, acronym, sub, sup, kbd, etc.\n\nLorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. <abbr title=\"Avenue\">AVE</abbr>. Use <kbd>Crtl</kbd> + <kbd>C</kbd> to stop.\n\n### 图片\n\n![image](https://d-sketon.top/img/backwebp/bg1.webp)\n\n### 分隔线\n\n---\n\n## 代码块\n\n```plain\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n```\n\n```rust\n#[derive(Debug)]\npub enum State {\n    Start,\n    Transient,\n    Closed,\n}\n\nimpl From<&'a str> for State {\n    fn from(s: &'a str) -> Self {\n        match s {\n            \"start\" => State::Start,\n            \"closed\" => State::Closed,\n            _ => unreachable!(),\n        }\n    }\n}\n```\n\n```json\n[\n  {\n    \"title\": \"apples\",\n    \"count\": [12000, 20000],\n    \"description\": { \"text\": \"...\", \"sensitive\": false }\n  },\n  {\n    \"title\": \"oranges\",\n    \"count\": [17500, null],\n    \"description\": { \"text\": \"...\", \"sensitive\": false }\n  }\n]\n```\n\n```python\n@requires_authorization\ndef somefunc(param1='', param2=0):\n    r'''A docstring'''\n    if param1 > param2: # interesting\n        print 'Gre\\'ater'\n    return (param2 - param1 + 1 + 0b10l) or None\n\nclass SomeClass:\n    pass\n\n>>> message = '''interpreter\n... prompt'''\n```\n\n```html\n<!DOCTYPE html>\n<title>Title</title>\n\n<style>\n  body {\n    width: 500px;\n  }\n</style>\n\n<script type=\"application/javascript\">\n  function $init() {\n    return true;\n  }\n</script>\n\n<body>\n  <p checked class=\"title\" id=\"title\">Title</p>\n  <!-- here goes the rest of the page -->\n</body>\n```\n\n```javascript\nfunction $initHighlight(block, cls) {\n  try {\n    if (cls.search(/\\bno\\-highlight\\b/) != -1)\n      return process(block, true, 0x0F) +\n             ` class=\"${cls}\"`;\n  } catch (e) {\n    /* handle exception */\n  }\n  for (var i = 0 / 2; i < classes.length; i++) {\n    if (checkCondition(classes[i]) === undefined)\n      console.log('undefined');\n  }\n\n  return (\n    <div>\n      <web-component>{block}</web-component>\n    </div>\n  )\n}\n\nexport $initHighlight;\n```\n\n```cpp\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n```\n\n```sql\nCREATE TABLE \"topic\" (\n    \"id\" serial NOT NULL PRIMARY KEY,\n    \"forum_id\" integer NOT NULL,\n    \"subject\" varchar(255) NOT NULL\n);\nALTER TABLE \"topic\"\nADD CONSTRAINT forum_id FOREIGN KEY (\"forum_id\")\nREFERENCES \"forum\" (\"id\");\n\n-- Initials\ninsert into \"topic\" (\"forum_id\", \"subject\")\nvalues (2, 'D''artagnian');\n```\n\n```objectivec\n#import <UIKit/UIKit.h>\n#import \"Dependency.h\"\n\n@protocol WorldDataSource\n@optional\n- (NSString*)worldName;\n@required\n- (BOOL)allowsToLive;\n@end\n\n@property (nonatomic, readonly) NSString *title;\n- (IBAction) show;\n@end\n```\n\n```java\n/**\n * @author John Smith <john.smith@example.com>\n*/\npackage l2f.gameserver.model;\n\npublic abstract class L2Char extends L2Object {\n  public static final Short ERROR = 0x0001;\n\n  public void moveTo(int x, int y, int z) {\n    _ai = null;\n    log(\"Should not be called\");\n    if (1 > 5) { // wtf!?\n      return;\n    }\n  }\n}\n```\n\n```swift\nimport Foundation\n\n@objc class Person: Entity {\n  var name: String!\n  var age:  Int!\n\n  init(name: String, age: Int) {\n    /* /* ... */ */\n  }\n\n  // Return a descriptive string for this person\n  func description(offset: Int = 0) -> String {\n    return \"\\(name) is \\(age + offset) years old\"\n  }\n}\n```\n\n```css\n@font-face {\n  font-family: Chunkfive;\n  src: url(\"Chunkfive.otf\");\n}\n\nbody,\n.usertext {\n  color: #f0f0f0;\n  background: #600;\n  font-family: Chunkfive, sans;\n}\n\n@import url(print.css);\n@media print {\n  a[href^=\"http\"]::after {\n    content: attr(href);\n  }\n}\n```\n\n```ruby\n# The Greeter class\nclass Greeter\n  def initialize(name)\n    @name = name.capitalize\n  end\n\n  def salute\n    puts \"Hello #{@name}!\"\n  end\nend\n\ng = Greeter.new(\"world\")\ng.salute\n```\n\n```makefile\n# Makefile\n\nBUILDDIR      = _build\nEXTRAS       ?= $(BUILDDIR)/extras\n\n.PHONY: main clean\n\nmain:\n\t@echo \"Building main facility...\"\n\tbuild_main $(BUILDDIR)\n\nclean:\n\trm -rf $(BUILDDIR)/*\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    ch := make(chan float64)\n    ch <- 1.0e10    // magic number\n    x, ok := <- ch\n    defer fmt.Println(`exitting now\\`)\n    go println(len(\"hello world!\"))\n    return\n}\n```\n\n```bash\n#!/bin/bash\n\n###### CONFIG\nACCEPTED_HOSTS=\"/root/.hag_accepted.conf\"\nBE_VERBOSE=false\n\nif [ \"$UID\" -ne 0 ]\nthen\n  echo \"Superuser rights required\"\n  exit 2\nfi\n\ngenApacheConf(){\n  echo -e \"# Host ${HOME_DIR}$1/$2 :\"\n}\n```\n\n```ini\n; boilerplate\n[package]\nname = \"some_name\"\nauthors = [\"Author\"]\ndescription = \"This is \\\na description\"\n\n[[lib]]\nname = ${NAME}\ndefault = True\nauto = no\ncounter = 1_000\n```\n\n## 标签插件\n\n### 引用块\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n### 代码块\n\n#### 带有标题和 URL\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n.compact([0, 1, false, 2, ‘’, 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n#### 带有选中行\n\n{% codeblock lang:js mark:1,7-8,10 %}\nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 1337;\n\nhttp.createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\n  res.end('Hello World\\n');\n}).listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n{% endcodeblock %}\n\n### Pull Quote\n\n{% pullquote left %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n{% endpullquote %}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac.\n\n\n{% pullquote right %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n{% endpullquote %}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.\n\n\n## 数学公式\n\n$f(n) = \\Theta(g(n)) \\land g(n) = \\Theta(h(n)) \\rightarrow f(n) = \\Theta(h(n))$\n\n$\\omega(g(n))=\\{f(n):\\text{存在正常量}c\\text{和}n_0\\text{，使得对所有}n \\geq n_0\\text{，有}0\\leq cg(n) < f(n)\\}$\n\n$$\nf^{(i)}(n) =\n\\begin{cases}\nn \\qquad & i = 1 \\\\\nf(f^{(i-1)}(n)) \\qquad &  i>1\n\\end{cases}\n$$\n\n$$\nA = \\begin{bmatrix}\nA_{11} & A_{12} \\\\\nA_{21} & A_{22}\n\\end{bmatrix}\n,\nB = \\begin{bmatrix}\nB_{11} & B_{12} \\\\\nB_{21} & B_{22}\n\\end{bmatrix}\n,\nC = \\begin{bmatrix}\nC_{11} & C_{12} \\\\\nC_{21} & C_{22}\n\\end{bmatrix}\n$$\n\n$$\\sum^{\\lfloor lgn \\rfloor}_{h=0} \\lceil \\frac{n}{2^{h+1}} \\rceil O(h) = O(n \\sum^{\\lfloor lgn \\rfloor}_{h=0} \\frac{h}{2^h}) =  O(n \\sum^{\\infty}_{h=0} \\frac{h}{2^h}) =O(n)$$\n\n$$\n\\begin{align}\n&\\underset{\\boldsymbol{w}}{\\min}\\sum_{i=1}^N{\\left( \\boldsymbol{p}_i\\boldsymbol{w} \\right) ^2 },\\,\\, s.t. \\,\\left\\| \\boldsymbol{w} \\right\\| _2=1 \\notag\n\\\\\n\\Rightarrow &\\underset{\\boldsymbol{w}}{\\min}\\,\\,\\boldsymbol{w}^T\\boldsymbol{P}^T\\boldsymbol{Pw},\\,\\, s.t.\\, \\boldsymbol{w}^T\\boldsymbol{w}=1\n\\end{align}\n$$\n\n## 流程图\n\n```mermaid\n  sequenceDiagram\n  participant 客户端\n  participant 代理对象\n  participant 代理处理器\n  participant 目标对象\n  客户端->>代理对象:调用方法\n  代理对象->>代理处理器:转发代理处理器<br>Invoke()方法\n  代理处理器->>目标对象:判断Method<br>调用目标对象的方法\n  目标对象->>代理处理器:返回结果\n  代理处理器->>代理对象:返回结果\n  代理对象->>客户端:返回结果\n```\n\n```mermaid\n  graph LR\n  c1[Client1<br>Socket]--客户端发出连接-->ss[ServerSocket]\n  c2[Client2<br>Socket]--客户端发出连接-->ss[ServerSocket]\n  ss--服务器接受请求并创建新的Socket-->s1[为Client1创<br>建的Socket]\n  ss--服务器接受请求并创建新的Socket-->s2[为Client2创<br>建的Socket]\n  c1--两个Socket间建立专线连接-->s1\n  c2--两个Socket间建立专线连接-->s2\n```\n\n## 卡片\n\n{% postLinkCard \"hexo-theme-reimu效果展示\" auto %}\n\n{% externalLinkCard \"Github\" \"https://github.com/D-Sketon/hexo-theme-reimu\" \"https://github.githubassets.com/assets/apple-touch-icon-144x144-b882e354c005.png\" %}","tags":["Hexo","测试内容"],"categories":["测试内容"]},{"title":"如何给网页添加Live2D看板娘","url":"/2024/11/28/Live2D/","content":"# 使用一些主题自带的Live2D开关\n\n以我自己目前使用的主题[Reimu](https://github.com/D-Sketon/hexo-theme-reimu)为例：\n{% externalLinkCard \"reimu-Live2D\" \"https://github.com/D-Sketon/hexo-theme-reimu?tab=readme-ov-file#live2d\" \"https://d-sketon.github.io/avatar/avatar.webp\" %}\n\n仅需在 `_config.reimu.yml` 中调整以下设置即可：\n\n```\nlive2d:\n  enable: true\n```\n\n保存并提交后就能在部署的网页中看到Live2D小人啦~\n\n但是这样得到的Live2D看板娘无法自定义，那么要怎么自定义呢？\n\n有一种方式是通过修改 `_config.reimu.yml` 中的以下内容（不同主题的位置以及实现方法不同）：\n\n```\nvendor:\n  fastly_jsdelivr_gh: https://fastly.jsdelivr.net/gh/\n  js:\n    live2d:\n      base: fastly_jsdelivr_gh|D-Sketon/plugin-live2d/\n      js: fastly_jsdelivr_gh|D-Sketon/plugin-live2d/js/live2d-autoload.js\n```\n\n将这些内容修改为自己的CDN链接即可，可以参考以下内容：\n\n{% externalLinkCard \"使用CDN\" \"https://github.com/stevenjoezhang/live2d-widget?tab=readme-ov-file#%E4%BD%BF%E7%94%A8-cdn\" \"https://github.com/stevenjoezhang/live2d-widget/raw/master/assets/screenshot-1.png\" %}\n\n但是我认为这太麻烦了~~（其实是我搞了半天没搞好）~~，我选择一些更简单的方式实现（\n\n# 使用OhMyLive2D组件\n\n{% externalLinkCard \"为你的个人博客添加一个Live2D看板娘\" \"https://www.bilibili.com/video/BV1TD421M7zm/\" \"https://raw.githubusercontent.com/hacxy/hacxy/main/images/121472002.png\" %}\n\n我们可以来到他的官网查看在Hexo上的[部署教程](https://oml2d.com/guide/hexo.html)\n\n首先安装\n\n```安装\nnpm install hexo-oh-my-live2d\n```\n\n然后在 `_config.yml` 中添加\n\n```配置\n# hexo-oh-my-live2d 配置\nOhMyLive2d:\n  enable: true\n  CDN: https://unpkg.com/oh-my-live2d\n  option:\n    dockedPosition: 'right' # 模型停靠位置 默认值: 'right' 可选值: 'left' | 'right'\n    # menus: |\n    #   (currentModel) =>{\n    #     console.log(currentModel);\n    #   }\n\n    # menus:\n    #   items: |\n    #     (defaultItems)=>{\n    #      return [\n    #        ...defaultItems,\n    #        {\n    #          id: 'github',\n    #          icon: 'github-fill',\n    #          title: '我的github',\n    #          onClick: ()=>window.open('https://github.com/hacxy')\n    #        }\n    #      ]\n    #     }\n\n    #   items:\n    #     - id: 'github'\n    #       icon: 'github-fill'\n    #       title: '我的github'\n    #       onClick: ()=>window.open('https://github.com/hacxy')\n\n    mobileDisplay: true # 是否在移动端显示\n    models:\n      - path: https://unpkg.com/live2d-widget-model-shizuku@1.0.5/assets/shizuku.model.json\n        mobilePosition: [-10, 23] # 移动端时模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]\n        mobileScale: 0.1 # 移动端时模型的缩放比例 默认值: 0.1\n        mobileStageStyle: # 移动端时舞台的样式\n          width: 180\n          height: 166\n        motionPreloadStrategy: IDLE # 动作预加载策略 默认值: IDLE 可选值: ALL | IDLE | NONE\n        position: [-10, 35] # 模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]\n        scale: 0.15 # 模型的缩放比例 默认值: 0.1\n        # showHitAreaFrames: false # 是否显示点击区域 默认值: false\n        stageStyle:\n          width: 250\n          height: 250\n      - path: 'https://unpkg.com/live2d-widget-model-koharu@1.0.5/assets/koharu.model.json'\n        scale: 0.12\n        position: [0, 0]\n        stageStyle:\n          width: 250\n        mobileScale: 0.08\n        mobilePosition: [0, 0]\n        mobileStageStyle: # 移动端时舞台的样式\n          width: 180\n      - path: 'https://unpkg.com/live2d-widget-model-haruto@1.0.5/assets/haruto.model.json'\n        scale: 0.12\n        position: [0, 0]\n        mobileScale: 0.08\n        mobilePosition: [0, 0]\n        mobileStageStyle: # 移动端时舞台的样式\n          width: 180\n        stageStyle:\n          width: 250\n    parentElement: document.body #为组件提供一个父元素，如果未指定则默认挂载到 body 中\n    primaryColor: 'var(--btn-bg)' # 主题色 支持变量\n    sayHello: false # 是否在初始化阶段打印项目信息\n    tips:\n      style:\n        width: 230\n        height: 120\n        left: calc(50% - 20px)\n        top: -100px\n      mobileStyle:\n        width: 180\n        height: 80\n        left: calc(50% - 30px)\n        top: -100px\n      idleTips:\n        interval: 15000\n        # message:\n        #   - 你好呀~\n        #   - 欢迎来到我的小站~\n        # 自定义提示语 需要 引入 axios 库 ,也可以使用其他方法\n        message: |\n          function(){\n            return axios.get('https://v1.hitokoto.cn?c=i')\n              .then(function (response) {\n                return response.data.hitokoto ;\n              })\n              .catch(function (error) {\n                console.error(error);\n              });\n          }\n        # wordTheDay: true\n        # 自定义  https://v1.hitokoto.cn  数据\n        # wordTheDay: |\n        #   function(wordTheDayData){\n        #     return `${wordTheDayData.hitokoto}    by.${wordTheDayData.from}`;\n        #   }\n  # 具体方法请看: https://oml2d.com/guide/loadModel.html#oml2d-%E5%AE%9E%E4%BE%8B\n  # then: |\n  #    oml2d.onStageSlideIn(() => {\n  #    oml2d.tipsMessage('Oh My Live2D !!!', 3000, 10);\n  #    });\n```\n\n## 自定义（OhMyLive2D）\n\n首先将Live2D模型放在根目录的 `source` 目录下\n\n模型怎么来？可以参考[Live2d-model](https://github.com/Eikanya/Live2d-model)\n\nLive2D模型模型文件夹结构大致如下：\n\n```\nmodel/\n- motions/\n  - 1.mtn\n  - 2.mtn\n  - ...\n- model_name_number/\n  - xxx.png\n- model.json\n- physice.json\n- model.moc\n```\n\n在 `_config.yml` 的 `skip_render` 添加模型文件夹\n\n```\nskip_render:\n  - model/**\n```\n\n然后在 `_config.yml` 的 `OhMyLive2d` 配置中\n\n`source` 改为 `''`\n\n`path` 为你的 `model.json` 路径\n\n```\nOhMyLive2d:\n  enable: true\n    source: ''\n    models:\n      - path: /model/model.json\n```\n\n保存并提交后就能在部署的网页中看到自己的Live2D小人啦~\n","tags":["Hexo"],"categories":["Hexo"]}]